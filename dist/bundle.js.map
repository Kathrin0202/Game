{"version":3,"file":"bundle.js","mappings":"mBACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,kBCA3E,IAAII,EAAQ,CACf,UACA,WACA,SACA,UACA,UACA,WACA,SACA,UACA,UACA,WACA,SACA,UACA,UACA,WACA,SACA,UACA,WACA,YACA,UACA,WACA,cACA,eACA,aACA,cACA,aACA,cACA,YACA,aACA,eACA,gBACA,cACA,eACA,YACA,aACA,WACA,aCjCG,SAASC,EAAgBC,EAAkBC,GAK9C,IAJA,IACIC,EACAC,EAFAC,EAAW,GAGXC,EAAS,GACJC,EAAI,EAAGA,GAAKL,EAAYK,IAAK,CAClC,IAAMC,EAAST,EAAMU,KAAKC,MAAMD,KAAKD,SAAWT,EAAMY,SACtDN,GAAY,qCACOE,EAAC,wCACDC,EAAM,kDAAyCA,EAAM,sBAAcA,EAAM,uBAE5FT,EAAMa,OAAOb,EAAMc,QAAQL,GAAS,E,CAExC,IAmBMM,EAAO,4BAnBI,4cAmByB,iCACxBT,EAAQ,iBAC1BJ,EAAIc,UAAYD,EAChBE,YAAW,WACMC,SAASC,iBAAiB,SAClCC,SAAQ,SAACC,GACVA,EAAIC,aAAa,MAAO,iCAC5B,GACJ,GAAG,KACH,IAAIC,EAAO,EACPC,EAAQC,aAAY,WACpBF,IACA,IAAMG,EAAUhB,KAAKC,MAAMY,EAAO,IAC7BI,WACAC,SAAS,EAAG,KACXC,GAAWN,EAAO,IAAII,WAAWC,SAAS,EAAG,KAC7CE,EAAYZ,SAASa,cAAc,SACzCD,EAAWE,YAAc,UAAGN,EAAO,YAAIG,GACvCtB,EAASuB,EAAWE,YACAd,SAASa,cAAc,gBAC9BE,iBAAiB,SAAS,WACnCV,EAAO,EACPO,EAAWE,YAAc,QACzBE,cAAcV,EAClB,GACJ,GAAG,KAC8BW,MAAMC,KACnClB,SAASC,iBAAiB,UAEzBC,SAAQ,SAACC,GACVA,EAAIY,iBAAiB,SAAS,WAK1B,GAJAZ,EAAIC,aACA,MACA,6BAAsBD,EAAIgB,QAAQC,MAAK,SAEtClC,EAID,GADAC,EAAagB,EAAIgB,QAAQC,MACrBlC,IAAcC,EAAY,CAC1B,IAAIkC,EAAS,wTAIWhC,EAAM,mKAK9BL,EAAIc,UAAYuB,EACErB,SAASa,cAAc,UAC5BE,iBAAiB,SAAS,WACnCO,GACJ,G,KACG,CACH,IAAIC,EAAS,uTAIWlC,EAAM,mKAK9BL,EAAIc,UAAYyB,EACEvB,SAASa,cAAc,UAC5BE,iBAAiB,SAAS,WACnCO,GACJ,G,MAhCJpC,EAAYiB,EAAIgB,QAAQC,KAmChC,GACJ,GACJ,CCzGO,SAASE,IAQZ,IAPA,IAKIE,EALEC,EAA6BR,MAAMC,KACrClB,SAASC,iBAAiB,WAExByB,EAAQ1B,SAASa,cAAc,UAC/B7B,EAAMgB,SAASa,cAAc,Q,WAGxBc,GACPA,EAAMZ,iBAAiB,SAAS,WAC5BS,EAAYG,EAAMP,MAClBQ,QAAQC,IAAI,uCAAgCL,EAAS,KACzD,G,EAJgB,MAAAC,EAAA,e,EAAJ,MAOhBC,EAAOX,iBAAiB,SAAS,WACX,MAAdS,GACAzC,EAAgBC,EAAK,GAEP,MAAdwC,GACAzC,EAAgBC,EAAK,IAEP,MAAdwC,GACAzC,EAAgBC,EAAK,GAE7B,GACJ,CACAsC,G","sources":["webpack://game/webpack/bootstrap","webpack://game/webpack/runtime/define property getters","webpack://game/webpack/runtime/hasOwnProperty shorthand","webpack://game/./src/cards.js","webpack://game/./src/levelPage.ts","webpack://game/./src/script.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export let cards = [\n    '6 бубны',\n    '6 крести',\n    '6 пики',\n    '6 черви',\n    '7 бубны',\n    '7 крести',\n    '7 пики',\n    '7 черви',\n    '8 бубны',\n    '8 крести',\n    '8 пики',\n    '8 черви',\n    '9 бубны',\n    '9 крести',\n    '9 пики',\n    '9 черви',\n    '10 бубны',\n    '10 крести',\n    '10 пики',\n    '10 черви',\n    'валет бубны',\n    'валет крести',\n    'валет пики',\n    'валет черви',\n    'дама бубны',\n    'дама крести',\n    'дама пики',\n    'дама черви',\n    'король бубны',\n    'король крести',\n    'король пики',\n    'король черви',\n    'туз бубны',\n    'туз крести',\n    'туз пики',\n    'туз черви',\n]\n","import { cards } from './cards'\nimport './css/page.css'\nimport { startPage } from './script'\nexport function renderLevelPage(box: HTMLElement, cardsCount: number) {\n    let openHtml = ''\n    let firstCard: string | undefined\n    let secondCard: string | undefined\n    let myTime = ''\n    for (let i = 0; i <= cardsCount; i++) {\n        const random = cards[Math.floor(Math.random() * cards.length)]\n        openHtml += `\n        <div data-index=\"${i}\">\n        <img data-value=\"${random}\"class=\"card\" src='./static/asset/jpg/${random}.jpg' alt='${random}'/>\n        </div>`\n        cards.splice(cards.indexOf(random), 1)\n    }\n    const headHtml = `\n    <header class=\"head\">\n    <div class=\"timetable\">\n        <div class=\"minutes\">\n            <div class=\"min\">\n                <p>min</p>\n            </div>\n            <div class=\"min\">\n                <p>sek</p>\n            </div>\n        </div>\n        <div class=\"time\">\n            <time></time>\n        </div>\n    </div>\n    <div class=\"startAgain\">\n        <button class=\"buttonstart\">Начать заново</button>\n    </div>\n</header>`\n    const open = `<div class=\"tops\">${headHtml}\n <div class=\"cards\">${openHtml}</div> </div>`\n    box.innerHTML = open\n    setTimeout(() => {\n        const card = document.querySelectorAll('.card')\n        card.forEach((car) => {\n            car.setAttribute('src', './static/asset/jpg/рубашка.jpg')\n        })\n    }, 5000)\n    let time = 0\n    let timer = setInterval(() => {\n        time++\n        const minutes = Math.floor(time / 60)\n            .toString()\n            .padStart(2, '0')\n        const seconds = (time % 60).toString().padStart(2, '0')\n        const gameTimer = document.querySelector('.time')\n        gameTimer!.textContent = `${minutes}.${seconds}`\n        myTime = gameTimer!.textContent\n        const buttonStart = document.querySelector('.buttonstart')\n        buttonStart!.addEventListener('click', () => {\n            time = 0\n            gameTimer!.textContent = '00.00'\n            clearInterval(timer)\n        })\n    }, 1000)\n    const card: HTMLInputElement[] = Array.from(\n        document.querySelectorAll('.card')\n    )\n    card.forEach((car) => {\n        car.addEventListener('click', () => {\n            car.setAttribute(\n                'src',\n                `./static/asset/jpg/${car.dataset.value}.jpg`\n            )\n            if (!firstCard) {\n                firstCard = car.dataset.value\n            } else {\n                secondCard = car.dataset.value\n                if (firstCard !== secondCard) {\n                    let looser = `<div class=\"container\">\n                    <h1 class=\"title-end\"><img class=\"image\"src=\"./static/asset/jpg/looser.png\" alt=\"looser\">Вы проиграли!</h1>\n                    <div class=\"levels\">\n                    <p class=\"text-end\">Затраченное время:</p>\n                    <div class=\"time-end\">${myTime}</div>\n                        </div>\n                        <button class=\"start\">Играть снова</button>\n                    </div>\n                </div>`\n                    box.innerHTML = looser\n                    let buttonAgain = document.querySelector('.start')\n                    buttonAgain!.addEventListener('click', () => {\n                        startPage()\n                    })\n                } else {\n                    let winner = `<div class=\"container\">\n                    <h1 class=\"title-end\"><img class=\"image\"src=\"./static/asset/jpg/winner.png\" alt=\"winner\">Вы выиграли!</h1>\n                    <div class=\"levels\">\n                    <p class=\"text-end\">Затраченное время:</p>\n                    <div class=\"time-end\">${myTime}</div>\n                        </div>\n                        <button class=\"start\">Играть снова</button>\n                    </div>\n                </div>`\n                    box.innerHTML = winner\n                    let buttonAgain = document.querySelector('.start')\n                    buttonAgain!.addEventListener('click', () => {\n                        startPage()\n                    })\n                }\n            }\n        })\n    })\n}\n","import { renderLevelPage } from './levelPage'\nimport './css/index.css'\nimport * as _ from 'lodash'\nexport function startPage() {\n    const levels: HTMLInputElement[] = Array.from(\n        document.querySelectorAll('.radio')\n    )\n    const start = document.querySelector('.start')\n    const box = document.querySelector('.top') as HTMLElement\n    let userLevel: String | null\n\n    for (const level of levels) {\n        level.addEventListener('input', () => {\n            userLevel = level.value\n            console.log(`Вы выбрали уровень сложности ${userLevel}!`)\n        })\n    }\n\n    start!.addEventListener('click', () => {\n        if (userLevel === '1') {\n            renderLevelPage(box, 6)\n        }\n        if (userLevel === '2') {\n            renderLevelPage(box, 12)\n        }\n        if (userLevel === '3') {\n            renderLevelPage(box, 18)\n        }\n    })\n}\nstartPage()\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","cards","renderLevelPage","box","cardsCount","firstCard","secondCard","openHtml","myTime","i","random","Math","floor","length","splice","indexOf","open","innerHTML","setTimeout","document","querySelectorAll","forEach","car","setAttribute","time","timer","setInterval","minutes","toString","padStart","seconds","gameTimer","querySelector","textContent","addEventListener","clearInterval","Array","from","dataset","value","looser","startPage","winner","userLevel","levels","start","level","console","log"],"sourceRoot":""}